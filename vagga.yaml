containers:

  check:
    # Note this container is used with `SubConfig` in real schedulers
    # So don't use external files here, please!
    setup:
    - !Alpine v3.4
    - !Repo edge/community
    - &rocks !Install [lua5.3, luarocks5.3, ca-certificates, curl]
    - !Sh |
        echo 'variables = { CC = "gcc -I/usr/include/lua5.3" }' >> /etc/luarocks/config-5.3.lua

    - !Tar
      url: https://github.com/tailhook/lithos/files/286139/lithos-check-v0.5.1.tar.gz
      sha256: 5501d0a4ce5076116517984d1e5b6bf36913140021085d1808dd4f00b0e2ff62
      path: /usr/bin

    - !Tar
      url: https://github.com/tailhook/verwalter/files/381841/verwalter-render-v0.5.0.tar.gz
      sha256: fc284379a664d840cf1df087d8210d6c32cd030c0999e73b854297bc97bed45d
      path: /usr/bin

    - !BuildDeps [build-base, lua5.3-dev]
    - !Sh luarocks-5.3 install busted
    - !Sh luarocks-5.3 install luacheck
    - !Sh luarocks-5.3 install luacov

  imitation:
    # Note this container is used with `SubConfig` in real schedulers
    # So don't use external files here, please!
    setup:
    - !Ubuntu xenial
    - !UbuntuRepo
      url: http://repo.mglawica.org/ubuntu/
      suite: xenial
      components: [verwalter-testing]
      trusted: true
    - !Install [verwalter]
    - !PipConfig { dependencies: true }
    - !Py3Install
      - aiohttp==0.22.5
    - !Download
      url: https://raw.githubusercontent.com/tailhook/verwalter/master/util/fake-cantal.py
      path: /usr/bin/fake-cantal
    - !Download
      url: https://raw.githubusercontent.com/tailhook/verwalter/master/util/fetch-runtime.py
      path: /usr/bin/fetch-runtime
    - !Sh |
        chmod +x /usr/bin/fake-cantal /usr/bin/fetch-runtime

  ack:
    setup:
    - !Alpine v3.7
    - !PipConfig { dependencies: true }
    - !Py3Install [setuptools, flake8]

  ack-py2:
    setup:
    - !Alpine v3.7
    - !Install [py-setuptools]
    - !PipConfig { dependencies: true }
    - !Py2Install [flake8]


commands:

  test: !Command
    container: check
    prerequisites: [check, check-ack2, check-ack3]
    accepts-arguments: true
    run: |
      exec busted --verbose --coverage ${1:-tests/*.lua}

  check: !Command
    container: check
    run: |
      set -ex
      luacheck modules/*.lua modules/*/*.lua tests/*.lua \
        --exclude-files modules/json.lua

  check-ack2: !Command
    container: ack-py2
    run: |
      set -ex
      flake8 ack.py ack2.py
      python -m unittest ack2_tests

  check-ack3: !Command
    container: ack
    run: |
      set -ex
      flake8 ack.py ack2.py
      python3 -m unittest ack2_tests

  test-coverage: !Command
    container: check
    prerequisites: [test]
    run: [luacov, '^./modules/']
    epilog: |
      Coverage report is in luacov.report.out
